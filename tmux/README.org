* useful alias

#+BEGIN_EXAMPLE
  alias ta='tmux attach -t'
  alias tl='tmux list-sessions'
  alias ts='tmux new-session -s'
#+END_EXAMPLE

* Panes Split

Vertical split

#+BEGIN_EXAMPLE
  Ctrl + | (Ctrl + shift + |)
#+END_EXAMPLE

Horizontal split

#+BEGIN_EXAMPLE
  Ctrl + -
#+END_EXAMPLE

* Navigate panes with hjkl

C-b l

C-b h

C-b k

C-b j

* save tmux state automatically

For multiple machines, use $HOSTNAME to seperate the log files.

#+BEGIN_EXAMPLE
  set -g @resurrect-dir '$HOME/.tmux/$HOSTNAME'
  set -g @continuum-save-interval '15'
  set -g @continuum-restore 'on'

  set -g @plugin 'tmux-plugins/tmux-resurrect'
  set -g @plugin 'tmux-plugins/tmux-continuum'
#+END_EXAMPLE

https://github.com/tmux-plugins/tmux-resurrect/pull/197
https://github.com/tmux-plugins/tmux-resurrect/blob/master/docs/save_dir.md

--- status-right

Known Issues
In order to be executed periodically,
the plugin updates the status-right tmux variable.
In case some plugin (usually themes) overwrites the status-right variable,
the autosave feature stops working.
To fix this issue, place the plugin last in the TPM plugins list.

---
Force update for tmux status bar
 https://superuser.com/questions/517402/force-update-for-tmux-status-bar

--- Automatic restore: touch ~/tmux_no_auto_restore

Remove set -g @continuum-restore 'on' from tmux.conf.

touch ~/tmux_no_auto_restore.
Automatic restore won't happen if this file exists.

--- faq

First automatic save starts 15 minutes after tmux is started.
If automatic restore is not enabled,
that gives you enough time to manually restore from a previous save.

A regular save file is in the range of 5Kb.
And tmux-resurrect already has a remove_old_backups() routine
that will "remove resurrect files older than 30 days,
but keep at least 5 copies of backup."

The interval is always measured in minutes.
So setting the interval to 60 (minutes) will do the trick.
Put this in .tmux.conf:

#+begin_example
set -g @continuum-save-interval '60'
#+end_example

The default 15 min is OK. This plugin does not save state periodically. The save operation is triggered by
tmux state change (status-right) if the time diff > 15 min.

---

Save & Restore Hooks
  https://github.com/tmux-plugins/tmux-resurrect/blob/master/docs/hooks.md
  
Hooks allow to set custom commands that will be executed during session save and restore.

* save tmux state manually

#+BEGIN_EXAMPLE
  ./scripts/tmux_save
#+END_EXAMPLE

#+begin_example
while true; do ~/dotfiles/tmux/scripts/tmux_save; sleep 1800; done
#+end_example

#+begin_example
~/dotfiles/tmux/scripts/tmux_save
#+end_example

https://github.com/tmux-plugins/tmux-resurrect

* setup tpm

https://github.com/tmux-plugins/tpm

Clone TPM

#+BEGIN_EXAMPLE
  $ git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
#+END_EXAMPLE

If you're in tmux

#+BEGIN_EXAMPLE
  tmux source ~/.tmux.conf
#+END_EXAMPLE

Managing plugins via the command line

#+BEGIN_EXAMPLE
  ~/.tmux/plugins/tpm/bin/install_plugins

  ~/.tmux/plugins/tpm/bin/update_plugins all
  ~/.tmux/plugins/tpm/bin/update_plugins tmux-sensible
#+END_EXAMPLE

* tmux-fzf

- C-b s change session  
- C-b l change session by fzf
  
  #+begin_example
bind l run-shell -b "~/.tmux/plugins/tmux-fzf/scripts/session.sh attach"

bind-key "C-w" run-shell -b "~/.tmux/plugins/tmux-fzf/scripts/window.sh"
bind-key "C-p" run-shell -b "~/.tmux/plugins/tmux-fzf/scripts/pane.sh"
  #+end_example

https://github.com/sainnhe/tmux-fzf/issues/6
https://github.com/sainnhe/tmux-fzf/issues/6


If somehow ctrl-b F does not work, you can try hard code the fzf path.

#+begin_example
tmux run-shell 'command -v fzf'
command -v fzf
#+end_example
  
  #+begin_example
$ cd ~/.tmux/plugins/tmux-fzf
$ git diff
diff --git a/scripts/.fzf-tmux b/scripts/.fzf-tmux
index fb1bc9f..26f486f 100755
--- a/scripts/.fzf-tmux
+++ b/scripts/.fzf-tmux
@@ -17,7 +17,7 @@ fi
 TMUX_FZF_POPUP_HEIGHT=${TMUX_FZF_POPUP_HEIGHT:-38%}
 TMUX_FZF_POPUP_WIDTH=${TMUX_FZF_POPUP_WIDTH:-62%}

-fzf="$(command -v fzf 2> /dev/null)" || fzf="$(dirname "$0")/fzf"
+fzf=~jianmin/.fzf/bin/fzf
 [[ -x "$fzf" ]] || fail 'fzf executable not found'

 args=()

  #+end_example

* centos6 centos7 zsh version

cshrc

#+BEGIN_EXAMPLE
  alias ta tmux attach -t
  alias ts tmux new-session -s
  alias tl tmux list-sessions

      lsb_release -a|grep 'CentOS release 6'
      if ($? == 0) then
        echo "CentOS 6"
      else
         lsb_release -a|grep 'Description'
         setenv PATH /remote/ming/bin/centos_73/compile-zsh-5.7.1/bin:$PATH
         alias ta tmux -f ~/.tmux-centos7.conf attach -t
         alias ts tmux -f ~/.tmux-centos7.conf new-session -s
         alias tl tmux -f ~/.tmux-centos7.conf list-sessions
      endif
#+END_EXAMPLE

#+BEGIN_EXAMPLE
  ~/.tmux-centos7.conf
    set -g default-shell /remote/ming/bin/centos_73/compile-zsh-5.7.1/bin/zsh

  ~/.tmux.conf
  set -g default-shell /remote/ming/bin/zsh_5.7.1/bin/zsh
#+END_EXAMPLE
